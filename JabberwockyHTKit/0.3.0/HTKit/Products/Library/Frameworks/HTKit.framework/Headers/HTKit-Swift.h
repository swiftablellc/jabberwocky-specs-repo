// Generated by Apple Swift version 5.1.3 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import ARKit;
@import CoreFoundation;
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import SceneKit;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="HTKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

enum BannerStyle : NSInteger;
@class UIColor;

SWIFT_PROTOCOL("_TtP5HTKit20BannerColorsProtocol_")
@protocol BannerColorsProtocol
- (UIColor * _Nonnull)colorFor:(enum BannerStyle)style SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5HTKit12BannerColors")
@interface BannerColors : NSObject <BannerColorsProtocol>
- (UIColor * _Nonnull)colorFor:(enum BannerStyle)style SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC5HTKit12BannerHeight")
@interface BannerHeight : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, BannerPosition, closed) {
  BannerPositionBottom = 0,
  BannerPositionTop = 1,
};

typedef SWIFT_ENUM(NSInteger, BannerStyle, closed) {
  BannerStyleDanger = 0,
  BannerStyleInfo = 1,
  BannerStyleNone = 2,
  BannerStyleSuccess = 3,
  BannerStyleWarning = 4,
};


SWIFT_PROTOCOL("_TtP5HTKit9HTFeature_")
@protocol HTFeature <NSObject>
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end


SWIFT_CLASS("_TtC5HTKit21BannerWarningsFeature")
@interface BannerWarningsFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BannerWarningsFeature * _Nullable shared;)
+ (BannerWarningsFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end

@protocol NotificationBannerDelegate;
@class UILabel;
@class NotificationBannerQueue;
@class NSCoder;
enum QueuePosition : NSInteger;
@class UIViewController;

SWIFT_CLASS("_TtC5HTKit22BaseNotificationBanner")
@interface BaseNotificationBanner : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull BannerWillAppear;)
+ (NSNotificationName _Nonnull)BannerWillAppear SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull BannerDidAppear;)
+ (NSNotificationName _Nonnull)BannerDidAppear SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull BannerWillDisappear;)
+ (NSNotificationName _Nonnull)BannerWillDisappear SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSNotificationName _Nonnull BannerDidDisappear;)
+ (NSNotificationName _Nonnull)BannerDidDisappear SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull BannerObjectKey;)
+ (NSString * _Nonnull)BannerObjectKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat BANNER_DEFAULT_HEIGHT;)
+ (CGFloat)BANNER_DEFAULT_HEIGHT SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <NotificationBannerDelegate> _Nullable delegate;
@property (nonatomic, readonly, strong) BannerHeight * _Nonnull bannerHeight;
@property (nonatomic, readonly, strong) UILabel * _Nullable titleLabel;
@property (nonatomic) NSTimeInterval duration;
@property (nonatomic) BOOL autoDismiss;
@property (nonatomic) BOOL dismissOnTap;
@property (nonatomic) BOOL dismissOnSwipeUp;
@property (nonatomic, copy) void (^ _Nullable onTap)(void);
@property (nonatomic, copy) void (^ _Nullable onSwipeUp)(void);
@property (nonatomic, strong) NotificationBannerQueue * _Nonnull bannerQueue;
@property (nonatomic) NSTimeInterval dismissDuration;
@property (nonatomic, readonly) BOOL isDisplaying;
@property (nonatomic, readonly) BOOL isAnimating;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)dismiss;
- (void)remove;
- (void)showWithQueuePosition:(enum QueuePosition)queuePosition bannerPosition:(enum BannerPosition)bannerPosition queue:(NotificationBannerQueue * _Nonnull)queue on:(UIViewController * _Nullable)viewController;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, BlinkSensitivityOption, closed) {
  BlinkSensitivityOptionHighest = 0,
  BlinkSensitivityOptionHigh = 1,
  BlinkSensitivityOptionMedium = 2,
  BlinkSensitivityOptionLow = 3,
};

@class ARSCNView;
@class ARFaceAnchor;
@protocol UIViewControllerTransitionCoordinator;
@class ARSession;
@class NSBundle;

SWIFT_CLASS("_TtC5HTKit20CameraViewController")
@interface CameraViewController : UIViewController <ARSessionDelegate>
@property (nonatomic, strong) ARSCNView * _Nonnull sceneView;
@property (nonatomic, strong) ARFaceAnchor * _Nullable faceAnchor;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)decoder SWIFT_UNAVAILABLE;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (void)session:(ARSession * _Nonnull)session didFailWithError:(NSError * _Nonnull)error;
- (void)sessionWasInterrupted:(ARSession * _Nonnull)session;
- (void)sessionInterruptionEnded:(ARSession * _Nonnull)session;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@protocol SCNSceneRenderer;
@class SCNNode;
@class ARAnchor;
@class ARFrame;

@interface CameraViewController (SWIFT_EXTENSION(HTKit)) <ARSCNViewDelegate>
- (void)renderer:(id <SCNSceneRenderer> _Nonnull)renderer didAddNode:(SCNNode * _Nonnull)node forAnchor:(ARAnchor * _Nonnull)anchor;
- (void)renderer:(id <SCNSceneRenderer> _Nonnull)renderer didUpdateNode:(SCNNode * _Nonnull)node forAnchor:(ARAnchor * _Nonnull)anchor;
- (void)session:(ARSession * _Nonnull)session didUpdateFrame:(ARFrame * _Nonnull)frame;
@end

@class UIEvent;
@class UIWindowScene;

SWIFT_CLASS("_TtC5HTKit12CameraWindow")
@interface CameraWindow : UIWindow
@property (nonatomic, readonly, strong) CameraViewController * _Nullable cameraViewController;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIWindowLevel windowLevel;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC5HTKit13ClickAnimator")
@interface ClickAnimator : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ClickAnimator * _Nonnull shared;)
+ (ClickAnimator * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)executeOn:(UIView * _Nonnull)view completion:(void (^ _Nonnull)(void))completion;
@end


SWIFT_CLASS("_TtC5HTKit17ClickAssistWindow")
@interface ClickAssistWindow : UIWindow
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIWindowLevel windowLevel;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, ClickGestureOption, closed) {
  ClickGestureOptionBlink = 0,
  ClickGestureOptionDwell = 1,
};


SWIFT_CLASS("_TtC5HTKit13CountdownView")
@interface CountdownView : UIView
@property (nonatomic) CGRect frame;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)updateFrame;
- (void)layoutSubviews;
@end


@interface CountdownView (SWIFT_EXTENSION(HTKit))
@end

typedef SWIFT_ENUM(NSInteger, DismissStyle, closed) {
  DismissStyleNone = 0,
  DismissStyleByButton = 1,
  DismissStyleByTapOnOutside = 2,
};


@interface CountdownView (SWIFT_EXTENSION(HTKit))
@end

typedef SWIFT_ENUM(NSInteger, Animation, closed) {
  AnimationFadeIn = 0,
  AnimationFadeOut = 1,
  AnimationFadeInLeft = 2,
  AnimationFadeInRight = 3,
  AnimationFadeOutLeft = 4,
  AnimationFadeOutRight = 5,
  AnimationZoomIn = 6,
  AnimationZoomOut = 7,
};

@protocol Focusable;

SWIFT_CLASS("_TtC5HTKit24CursorClickAssistFeature")
@interface CursorClickAssistFeature : NSObject <HTFeature>
/// The current focusable that is targeted by the cursor after  the minimum element size hit boxes are applied.
/// This focusable gets updated during the cursor update process and may or may not be one notification behind
/// for concurrent notification observer captures of .onCursorUpdateNotification…
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) id <Focusable> _Nullable currentFocusable;)
+ (id <Focusable> _Nullable)currentFocusable SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CursorClickAssistFeature * _Nullable shared;)
+ (CursorClickAssistFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end


SWIFT_CLASS("_TtC5HTKit18CursorClickFeature")
@interface CursorClickFeature : NSObject <HTFeature>
@property (nonatomic, copy) void (^ _Nonnull clickAction)(CGPoint);
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CursorClickFeature * _Nullable shared;)
+ (CursorClickFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end

@class OptionalCGPoint;

SWIFT_CLASS("_TtC5HTKit13CursorContext")
@interface CursorContext : NSObject
@property (nonatomic, strong) OptionalCGPoint * _Nonnull smoothedScreenPoint;
@property (nonatomic, strong) OptionalCGPoint * _Nonnull smoothedNormalizedPoint;
@property (nonatomic) BOOL isFaceDetected;
@property (nonatomic) BOOL isMovingFast;
@property (nonatomic, readonly) BOOL shouldUpdateFocusLevel;
@property (nonatomic, readonly) BOOL shouldClickImmediately;
@property (nonatomic, readonly) CFTimeInterval clickDuration;
@property (nonatomic, readonly) BOOL isOnEdge;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtCC5HTKit13CursorContext15OptionalCGPoint")
@interface OptionalCGPoint : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly) CGPoint point;
@property (nonatomic, readonly) BOOL exists;
@end


SWIFT_CLASS("_TtC5HTKit17CursorDrawFeature")
@interface CursorDrawFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CursorDrawFeature * _Nullable shared;)
+ (CursorDrawFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) UIWindow * _Nullable cursorDrawWindow;)
+ (UIWindow * _Nullable)cursorDrawWindow SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5HTKit16CursorDrawWindow")
@interface CursorDrawWindow : UIWindow
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIWindowLevel windowLevel;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC5HTKit19CursorEffectsWindow")
@interface CursorEffectsWindow : UIWindow
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIWindowLevel windowLevel;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CursorGraphic, closed) {
  CursorGraphicClick = 0,
  CursorGraphicScroll = 1,
  CursorGraphicClickAndScroll = 2,
  CursorGraphicZoomIn = 3,
  CursorGraphicZoomOut = 4,
  CursorGraphicZoomNone = 5,
  CursorGraphicEmpty = 6,
};

typedef SWIFT_ENUM(NSInteger, CursorGraphicsMode, closed) {
  CursorGraphicsModeHighlight = 0,
  CursorGraphicsModeClassic = 1,
};


SWIFT_CLASS("_TtC5HTKit17CursorMenuFeature")
@interface CursorMenuFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CursorMenuFeature * _Nullable shared;)
+ (CursorMenuFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end


SWIFT_CLASS("_TtC5HTKit16CursorMenuWindow")
@interface CursorMenuWindow : UIWindow
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIWindowLevel windowLevel;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, CursorMode, closed) {
  CursorModeClick = 0,
  CursorModeScroll = 1,
  CursorModeClickAndScroll = 2,
  CursorModeEmpty = 3,
};


SWIFT_CLASS("_TtC5HTKit19CursorScrollFeature")
@interface CursorScrollFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isScrollingFast;)
+ (BOOL)isScrollingFast SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CursorScrollFeature * _Nullable shared;)
+ (CursorScrollFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end

typedef SWIFT_ENUM(NSInteger, CursorSensitivityOption, closed) {
  CursorSensitivityOptionLow = 0,
  CursorSensitivityOptionMedium = 1,
  CursorSensitivityOptionHigh = 2,
  CursorSensitivityOptionHighest = 3,
};

typedef SWIFT_ENUM(NSInteger, CursorToggle, closed) {
  CursorToggleClick = 0,
  CursorToggleScroll = 1,
};


SWIFT_CLASS("_TtC5HTKit20CursorTooltipFeature")
@interface CursorTooltipFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CursorTooltipFeature * _Nullable shared;)
+ (CursorTooltipFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end

typedef SWIFT_ENUM(NSInteger, DwellTimeOption, closed) {
  DwellTimeOptionFast = 0,
  DwellTimeOptionMedium = 1,
  DwellTimeOptionSlow = 2,
};


SWIFT_CLASS("_TtC5HTKit20EgressWarningFeature")
@interface EgressWarningFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EgressWarningFeature * _Nullable shared;)
+ (EgressWarningFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@property (nonatomic, copy) NSString * _Nonnull egressMessage;
+ (void)guardEgress:(NSString * _Nonnull)title completion:(void (^ _Nonnull)(void))completion cancelCompletion:(void (^ _Nonnull)(void))cancelCompletion;
@end


SWIFT_CLASS("_TtC5HTKit15FaceMeshFeature")
@interface FaceMeshFeature : NSObject <HTFeature>
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) FaceMeshFeature * _Nullable shared;)
+ (FaceMeshFeature * _Nullable)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (id <HTFeature> _Nonnull)configureWithFeatureEnabled:(BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL enabled;
- (void)enable;
- (void)disable;
@end


SWIFT_CLASS("_TtC5HTKit12FaceMeshView")
@interface FaceMeshView : UIView
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)decoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface FaceMeshView (SWIFT_EXTENSION(HTKit)) <ARSCNViewDelegate>
- (SCNNode * _Nullable)renderer:(id <SCNSceneRenderer> _Nonnull)renderer nodeForAnchor:(ARAnchor * _Nonnull)anchor SWIFT_WARN_UNUSED_RESULT;
- (void)renderer:(id <SCNSceneRenderer> _Nonnull)renderer didUpdateNode:(SCNNode * _Nonnull)node forAnchor:(ARAnchor * _Nonnull)anchor;
@end


SWIFT_CLASS("_TtC5HTKit14FaceMeshWindow")
@interface FaceMeshWindow : UIWindow
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) UIWindowLevel windowLevel;
- (nonnull instancetype)initWithWindowScene:(UIWindowScene * _Nonnull)windowScene SWIFT_UNAVAILABLE;
@end

enum Sound : NSInteger;

SWIFT_PROTOCOL("_TtP5HTKit9Focusable_")
@protocol Focusable
@property (nonatomic) enum Sound htClickSound;
@property (nonatomic, copy) BOOL (^ _Nonnull htIsFocusable)(void);
@property (nonatomic, copy) NSString * _Nullable htTooltipText;
- (CGRect)htFrameInScreenCoordinates SWIFT_WARN_UNUSED_RESULT;
- (void)htHandleTooShortClick;
- (BOOL)htIgnoresCursorMode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresScrollSpeed SWIFT_WARN_UNUSED_RESULT;
- (void)htInitiateAction:(CGPoint)screenPoint;
- (BOOL)htRequiresIntentionalBlinkDuration SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC5HTKit19FocusableFacadeView")
@interface FocusableFacadeView : UIView
@property (nonatomic, readonly) BOOL isDisposable;
@property (nonatomic, readonly, strong) id <Focusable> _Nonnull focusableDelegate;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)htFocus;
- (void)htBlur;
- (CGPoint)htTargetScreenPoint:(CGPoint)focusableScreenPoint SWIFT_WARN_UNUSED_RESULT;
- (void)htPlayClickSound;
- (void)htAnimateClick;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

enum HTAlertActionStyle : NSInteger;

SWIFT_CLASS("_TtC5HTKit13HTAlertAction")
@interface HTAlertAction : UIButton
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame fontColor:(UIColor * _Nonnull)fontColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title style:(enum HTAlertActionStyle)style action:(void (^ _Nullable)(void))action;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, HTAlertActionStyle, closed) {
  HTAlertActionStyleSimple = 0,
  HTAlertActionStyleBold = 1,
  HTAlertActionStyleDanger = 2,
};

@class UIImage;

SWIFT_CLASS("_TtC5HTKit17HTAlertController")
@interface HTAlertController : UIViewController
@property (nonatomic, strong) UIImage * _Nullable iconImage;
@property (nonatomic, copy) NSString * _Nullable titleText;
@property (nonatomic, copy) NSString * _Nullable messageText;
- (nonnull instancetype)initWithIcon:(UIImage * _Nullable)icon title:(NSString * _Nullable)title message:(NSString * _Nullable)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithTitle:(NSString * _Nullable)title message:(NSString * _Nullable)message;
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)decoder SWIFT_UNAVAILABLE;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewWillTransitionToSize:(CGSize)size withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator> _Nonnull)coordinator;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


@interface HTAlertController (SWIFT_EXTENSION(HTKit))
- (void)addAction:(HTAlertAction * _Nonnull)action;
@end





enum HTAnalyticsEvent : NSInteger;

SWIFT_PROTOCOL("_TtP5HTKit11HTAnalytics_")
@protocol HTAnalytics
- (void)sendEventWithEvent:(enum HTAnalyticsEvent)event additionalParameters:(NSDictionary<NSString *, id> * _Nonnull)additionalParameters;
@end

typedef SWIFT_ENUM(NSInteger, HTAnalyticsEvent, closed) {
  HTAnalyticsEventCalibrate = 0,
};


SWIFT_CLASS("_TtC5HTKit18HTBlinkSensitivity")
@interface HTBlinkSensitivity : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HTBlinkSensitivity * _Nonnull shared;)
+ (HTBlinkSensitivity * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) CFTimeInterval durationSeconds;
@property (nonatomic) BOOL shouldIncreaseKeyboardSensitivity;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5HTKit8HTCursor")
@interface HTCursor : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HTCursor * _Nonnull shared;)
+ (HTCursor * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) enum CursorMode actualCursorMode;
@property (nonatomic, readonly) enum CursorGraphic currentCursorGraphic;
@property (nonatomic, readonly) CGFloat cursorAlpha;
@property (nonatomic, readonly) BOOL isEnabled;
- (void)toggleCursorMode:(enum CursorToggle)cursorToggle;
- (void)disableScroll;
- (void)enableClickAndScroll;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5HTKit19HTCursorSensitivity")
@interface HTCursorSensitivity : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HTCursorSensitivity * _Nonnull shared;)
+ (HTCursorSensitivity * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic, readonly) float average;
@property (nonatomic) BOOL shareSensitivity;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5HTKit11HTDwellTime")
@interface HTDwellTime : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HTDwellTime * _Nonnull shared;)
+ (HTDwellTime * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) CFTimeInterval durationSeconds;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC5HTKit14HTFeatureUtils")
@interface HTFeatureUtils : NSObject
+ (NSArray<UIWindow *> * _Nonnull)getHittableWindowStack SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<UIView *> * _Nonnull)getFocusableViewsIn:(NSArray<UIWindow *> * _Nonnull)windows SWIFT_WARN_UNUSED_RESULT;
+ (UIView * _Nullable)getHitElementAt:(CGPoint)screenPoint in:(NSArray<UIWindow *> * _Nonnull)windows with:(UIEvent * _Nullable)hitEvent SWIFT_WARN_UNUSED_RESULT;
+ (BOOL)isViewEqualOrAncestor:(UIView * _Nonnull)ancestor of:(UIView * _Nullable)view SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5HTKit10HTKeyboard")
@interface HTKeyboard : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HTKeyboard * _Nonnull shared;)
+ (HTKeyboard * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isVisible;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class HeadMovementCorrection;

SWIFT_PROTOCOL("_TtP5HTKit10HTSettings_")
@protocol HTSettings
@property (nonatomic, copy) NSString * _Nonnull appName;
@property (nonatomic) BOOL disabledByUser;
@property (nonatomic) enum ClickGestureOption clickGesture;
@property (nonatomic) enum CursorGraphicsMode cursorGraphicsMode;
@property (nonatomic) BOOL disableCursorToggle;
@property (nonatomic) float horizontalSensitivity;
@property (nonatomic) float verticalSensitivity;
@property (nonatomic) BOOL shareSensitivity;
@property (nonatomic) CFTimeInterval blinkSensitivity;
@property (nonatomic) BOOL higherKeyboardBlinkSensitivity;
@property (nonatomic) CGFloat minimumElementSize;
@property (nonatomic) CFTimeInterval dwellTime;
@property (nonatomic, strong) HeadMovementCorrection * _Nonnull headMovementCorrection;
@end


SWIFT_CLASS("_TtC5HTKit8HTSounds")
@interface HTSounds : NSObject
+ (void)playSystemSound:(enum Sound)sound;
+ (void)playClick;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, Sound, closed) {
  SoundClick = 0,
  SoundDelete = 1,
  SoundModify = 2,
  SoundBeginRecord = 3,
};

typedef SWIFT_ENUM(NSInteger, HTWarning, closed) {
  HTWarningFaceLost = 0,
  HTWarningFaceTooClose = 1,
  HTWarningFaceTooFar = 2,
  HTWarningResetReminder = 3,
};


SWIFT_CLASS("_TtC5HTKit9HTWindows")
@interface HTWindows : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIWindowLevel cursorDrawWindowLevel;)
+ (UIWindowLevel)cursorDrawWindowLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCursorDrawWindowLevel:(UIWindowLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIWindowLevel clickAssistWindowLevel;)
+ (UIWindowLevel)clickAssistWindowLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setClickAssistWindowLevel:(UIWindowLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIWindowLevel effectsWindowLevel;)
+ (UIWindowLevel)effectsWindowLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setEffectsWindowLevel:(UIWindowLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIWindowLevel menuWindowLevel;)
+ (UIWindowLevel)menuWindowLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setMenuWindowLevel:(UIWindowLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIWindowLevel faceMeshWindowLevel;)
+ (UIWindowLevel)faceMeshWindowLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setFaceMeshWindowLevel:(UIWindowLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) UIWindowLevel cameraWindowLevel;)
+ (UIWindowLevel)cameraWindowLevel SWIFT_WARN_UNUSED_RESULT;
+ (void)setCameraWindowLevel:(UIWindowLevel)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HTWindows * _Nonnull shared;)
+ (HTWindows * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, strong) CameraWindow * _Nullable cameraWindow;
- (UIWindow * _Nullable)getWindowFor:(id <HTFeature> _Nonnull)feature SWIFT_WARN_UNUSED_RESULT;
- (void)disableFor:(id <HTFeature> _Nonnull)feature;
- (CameraWindow * _Nonnull)enableCameraWindow SWIFT_WARN_UNUSED_RESULT;
- (void)disableCameraWindow;
@end

enum Option : NSInteger;

SWIFT_CLASS("_TtC5HTKit22HeadMovementCorrection")
@interface HeadMovementCorrection : NSObject
@property (nonatomic, readonly) enum Option option;
@property (nonatomic, readonly) float realSpeedFactor;
@property (nonatomic, readonly) float noiseSpeedFactor;
@property (nonatomic, readonly) float ignoreBlinksSpeedFactor;
@property (nonatomic, readonly) float minimumDampeningFactor;
- (nonnull instancetype)init:(enum Option)option OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Option, closed) {
  OptionHigh = 0,
  OptionMedium = 1,
  OptionLow = 2,
};


SWIFT_CLASS("_TtC5HTKit12HeadTracking")
@interface HeadTracking : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<Class <HTFeature>> * _Nonnull DEFAULT_FEATURES;)
+ (NSArray<Class <HTFeature>> * _Nonnull)DEFAULT_FEATURES SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) HeadTracking * _Nonnull shared;)
+ (HeadTracking * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, strong) id <HTAnalytics> _Nonnull analytics;
@property (nonatomic, readonly, copy) NSArray<id <HTFeature>> * _Nonnull features;
@property (nonatomic, readonly) BOOL isRecalibrating;
@property (nonatomic, strong) id <HTSettings> _Null_unspecified settings;
+ (void)configureWithSettingsAppGroup:(NSString * _Nullable)appGroup completion:(void (^ _Nonnull)(void))completion;
+ (void)withAdditionalFeatures:(NSArray<Class <HTFeature>> * _Nonnull)features;
+ (void)withAnalyticsWithAnalytics:(id <HTAnalytics> _Nonnull)analytics;
+ (BOOL)ifConfigured:(void (^ _Nonnull)(HeadTracking * _Nonnull))completion;
+ (void)ifConfiguredElseWithConfiguredCompletion:(void (^ _Nonnull)(HeadTracking * _Nonnull))configuredCompletion notConfiguredCompletion:(void (^ _Nonnull)(void))notConfiguredCompletion;
@property (nonatomic, readonly) BOOL isSupportedByDevice;
@property (nonatomic, readonly) BOOL isAuthorizedOnDevice;
@property (nonatomic, copy) BOOL (^ _Nonnull isEnabledByApplication)(void);
@property (nonatomic, readonly) BOOL canBeActivated;
@property (nonatomic, readonly) BOOL isEnabled;
- (void)enableWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)disableWithAndAlsoUpdateSettings:(BOOL)andAlsoUpdateSettings;
- (void)activateCameraWindowWithPreventCalibration:(BOOL)preventCalibration completion:(void (^ _Nonnull)(void))completion;
- (void)deactivateCameraWindow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5HTKit20HeadTrackingListener")
@interface HeadTrackingListener : NSObject
- (nonnull instancetype)init:(UIView * _Nonnull)view :(void (^ _Nonnull)(UIView * _Nonnull))headTrackingUpdateFunction OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface NSNotification (SWIFT_EXTENSION(HTKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnHeadTrackingStatusUpdateNotificationKey;)
+ (NSString * _Nonnull)htOnHeadTrackingStatusUpdateNotificationKey SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(HTKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htWarningContextKey;)
+ (NSString * _Nonnull)htWarningContextKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htWarningNotificationKey;)
+ (NSString * _Nonnull)htWarningNotificationKey SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(HTKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull keyboardIsVisibleKey;)
+ (NSString * _Nonnull)keyboardIsVisibleKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnKeyboardUpdateNotificationKey;)
+ (NSString * _Nonnull)htOnKeyboardUpdateNotificationKey SWIFT_WARN_UNUSED_RESULT;
@end


@interface NSNotification (SWIFT_EXTENSION(HTKit))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htCursorContextKey;)
+ (NSString * _Nonnull)htCursorContextKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htCursorModeKey;)
+ (NSString * _Nonnull)htCursorModeKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htFocusedElementKey;)
+ (NSString * _Nonnull)htFocusedElementKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htChangeCursorModeNotificationKey;)
+ (NSString * _Nonnull)htChangeCursorModeNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnCursorFocusNotificationKey;)
+ (NSString * _Nonnull)htOnCursorFocusNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnCursorPreUpdateNotificationKey;)
+ (NSString * _Nonnull)htOnCursorPreUpdateNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnCursorUpdateNotificationKey;)
+ (NSString * _Nonnull)htOnCursorUpdateNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnRecalibrateNotificationKey;)
+ (NSString * _Nonnull)htOnRecalibrateNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnRecalibrateFinishedNotificationKey;)
+ (NSString * _Nonnull)htOnRecalibrateFinishedNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnCursorModeUpdateNotificationKey;)
+ (NSString * _Nonnull)htOnCursorModeUpdateNotificationKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull htOnCursorClickNotificationKey;)
+ (NSString * _Nonnull)htOnCursorClickNotificationKey SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP5HTKit26NotificationBannerDelegate_")
@protocol NotificationBannerDelegate
- (void)notificationBannerWillAppear:(BaseNotificationBanner * _Nonnull)banner;
- (void)notificationBannerDidAppear:(BaseNotificationBanner * _Nonnull)banner;
- (void)notificationBannerWillDisappear:(BaseNotificationBanner * _Nonnull)banner;
- (void)notificationBannerDidDisappear:(BaseNotificationBanner * _Nonnull)banner;
@end


SWIFT_CLASS("_TtC5HTKit23NotificationBannerQueue")
@interface NotificationBannerQueue : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong, getter=default) NotificationBannerQueue * _Nonnull default_;)
+ (NotificationBannerQueue * _Nonnull)default SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSInteger numberOfBanners;
- (void)removeAll;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5HTKit8Pulsator")
@interface Pulsator : CALayer
/// The value of this property showed a pulse is ongoing
@property (nonatomic, readonly) BOOL isPulsating;
- (nonnull instancetype)initWithNumPulse:(double)numPulse animationDuration:(NSTimeInterval)animationDuration OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithLayer:(id _Nonnull)layer SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, QueuePosition, closed) {
  QueuePositionBack = 0,
  QueuePositionFront = 1,
};

typedef SWIFT_ENUM(NSInteger, ScrollDirection, closed) {
  ScrollDirectionHorizontal = 0,
  ScrollDirectionVertical = 1,
};

@class NSAttributedString;

SWIFT_CLASS("_TtC5HTKit27StatusBarNotificationBanner")
@interface StatusBarNotificationBanner : BaseNotificationBanner
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat STATUS_BAR_DEFAULT_HEIGHT;)
+ (CGFloat)STATUS_BAR_DEFAULT_HEIGHT SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) CGFloat STATUS_BAR_VERTICAL_SAFE_INSET;)
+ (CGFloat)STATUS_BAR_VERTICAL_SAFE_INSET SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title style:(enum BannerStyle)style colors:(id <BannerColorsProtocol> _Nullable)colors;
- (nonnull instancetype)initWithAttributedTitle:(NSAttributedString * _Nonnull)attributedTitle style:(enum BannerStyle)style colors:(id <BannerColorsProtocol> _Nullable)colors;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5HTKit22SynthFocusHitTestEvent")
@interface SynthFocusHitTestEvent : UIEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5HTKit23SynthScrollHitTestEvent")
@interface SynthScrollHitTestEvent : UIEvent
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum InProgressFailMode : NSInteger;

SWIFT_CLASS("_TtC5HTKit17TransformAnimator")
@interface TransformAnimator : NSObject
- (nonnull instancetype)init:(UIView * _Nonnull)view failMode:(enum InProgressFailMode)failMode startTransformFunction:(CGAffineTransform (^ _Nonnull)(void))startTransformFunction OBJC_DESIGNATED_INITIALIZER;
- (void)show;
- (void)hide:(void (^ _Nonnull)(void))didSuccessfullyHideCompletion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, InProgressFailMode, closed) {
  InProgressFailModeSkipAnimation = 0,
  InProgressFailModeIgnore = 1,
};




@interface UICollectionViewCell (SWIFT_EXTENSION(HTKit)) <Focusable>
@property (nonatomic) enum Sound htClickSound;
@property (nonatomic, copy) BOOL (^ _Nonnull htIsFocusable)(void);
@property (nonatomic, copy) NSString * _Nullable htTooltipText;
- (CGRect)htFrameInScreenCoordinates SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresCursorMode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresScrollSpeed SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htRequiresIntentionalBlinkDuration SWIFT_WARN_UNUSED_RESULT;
- (void)htInitiateAction:(CGPoint)screenPoint;
- (void)htHandleTooShortClick;
@end


@interface UIControl (SWIFT_EXTENSION(HTKit)) <Focusable>
@property (nonatomic) enum Sound htClickSound;
@property (nonatomic) BOOL htIgnoresCursorModeAndScroll;
@property (nonatomic, copy) BOOL (^ _Nonnull htIsFocusable)(void);
@property (nonatomic) BOOL htIsKeyboardButton;
@property (nonatomic, copy) void (^ _Nonnull htShortClickHandler)(void);
@property (nonatomic, copy) NSString * _Nullable htTooltipText;
- (CGRect)htFrameInScreenCoordinates SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresCursorMode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresScrollSpeed SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htRequiresIntentionalBlinkDuration SWIFT_WARN_UNUSED_RESULT;
- (void)htInitiateAction:(CGPoint)screenPoint;
- (void)htHandleTooShortClick;
@end






@interface UITableViewCell (SWIFT_EXTENSION(HTKit)) <Focusable>
@property (nonatomic) enum Sound htClickSound;
@property (nonatomic, copy) BOOL (^ _Nonnull htIsFocusable)(void);
@property (nonatomic, copy) NSString * _Nullable htTooltipText;
- (CGRect)htFrameInScreenCoordinates SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresCursorMode SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htIgnoresScrollSpeed SWIFT_WARN_UNUSED_RESULT;
- (BOOL)htRequiresIntentionalBlinkDuration SWIFT_WARN_UNUSED_RESULT;
- (void)htInitiateAction:(CGPoint)screenPoint;
- (void)htHandleTooShortClick;
@end




@interface UIView (SWIFT_EXTENSION(HTKit))
@property (nonatomic, readonly, strong) UIView * _Nullable htFirstResponder;
@end


@interface UIView (SWIFT_EXTENSION(HTKit))
@property (nonatomic, strong) HeadTrackingListener * _Nullable htListener;
@end


@interface UIViewController (SWIFT_EXTENSION(HTKit))
@property (nonatomic, strong) UIScrollView * _Nullable htDefaultScrollTarget;
@end


@interface UIWindow (SWIFT_EXTENSION(HTKit))
@property (nonatomic, readonly, strong) UIViewController * _Nullable htTopViewController;
@end

typedef SWIFT_ENUM(NSInteger, ViewSide, closed) {
  ViewSideBottom = 0,
  ViewSideLeft = 1,
  ViewSideRight = 2,
  ViewSideTop = 3,
};


SWIFT_CLASS("_TtC5HTKit14WarningContext")
@interface WarningContext : NSObject
@property (nonatomic) BOOL active;
@property (nonatomic) enum HTWarning warning;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC5HTKit16WordDrawGraphics")
@interface WordDrawGraphics : NSObject
@property (nonatomic, weak) UIView * _Nullable parentView;
- (nonnull instancetype)init:(UIView * _Nonnull)view OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
